generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  CASH
  BANK
  EWALLET
  CREDIT
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum TransactionType {
  INCOME
  EXPENSE
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  name         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  accounts     Account[]
  categories   Category[]
  transactions Transaction[]
  budgets      BudgetMonth[]
}

model Account {
  id             String      @id @default(cuid())
  userId         String
  name           String
  type           AccountType
  currency       String      @default("IDR")
  initialBalance Decimal     @default(0) @db.Decimal(18, 2)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions   Transaction[]

  @@unique([userId, name])
  @@index([userId])
}

model Category {
  id          String         @id @default(cuid())
  userId      String
  name        String
  type        CategoryType
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      BudgetMonth[]

  @@unique([userId, name, type])
  @@index([userId, type])
}

model Transaction {
  id          String          @id @default(cuid())
  userId      String
  accountId   String
  categoryId  String?
  type        TransactionType
  amount      Decimal         @db.Decimal(18, 2)
  occurredAt  DateTime
  notes       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  account     Account         @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category    Category?       @relation(fields: [categoryId], references: [id])

  @@index([userId, occurredAt])
  @@index([userId, type])
}

model BudgetMonth {
  id         String    @id @default(cuid())
  userId     String
  categoryId String
  year       Int
  month      Int       // 1..12
  amount     Decimal   @db.Decimal(18, 2)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category  @relation(fields: [categoryId], references: [id])

  @@unique([userId, categoryId, year, month])
  @@index([userId, year, month])
}
